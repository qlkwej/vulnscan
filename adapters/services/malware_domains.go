package services

import (
	"bufio"
	"encoding/csv"
	"io"
	"net/http"
	"strings"

	"github.com/simplycubed/vulnscan/entities"
)

type Domain struct {
	Date          string
	Domain        string
	IP            string
	ReverseLookup string
	Description   string
	ASN           string
	Country       string
}

// MalwareDomainsAdapter checks if the url list belongs to one of the listed domains in www.malwaredomainlist.com.
// We use a simple strings.Contains and a double loop to make the check. This is fast enough in our tests.
func MalwareDomainsAdapter(command entities.Command, entity *entities.CodeAnalysis) error {
	var domainCheck = map[string]bool{}
	if database, err := getDataBase(); err != nil {
		return err
	} else {
		for _, u := range entity.Urls {
			for _, badDom := range database {
				if strings.Contains(u.Url, badDom.Domain) && !domainCheck[u.Url] {
					domainCheck[u.Url] = true
					entity.BadDomains = append(entity.BadDomains, u.Url)
				}
			}
		}
	}
	return nil
}

// Downloads the database from malwaredomainlist. The database is a csv file. The function translates
// this csv into an array of Domain objects.
func getDataBase() (domainList []Domain, err error) {
	// Get the data
	resp, err := http.Get("http://www.malwaredomainlist.com/mdlcsv.php")
	if err != nil {
		return domainList, err
	}
	defer resp.Body.Close()
	reader := csv.NewReader(bufio.NewReader(resp.Body))
	for {
		line, err := reader.Read()
		if err == io.EOF {
			break
		} else if err != nil {
			return domainList, err
		}
		domainList = append(domainList, Domain{
			line[0],
			line[1],
			line[2],
			line[3],
			line[4],
			line[5],
			line[6],
		})
	}
	return domainList, nil
}
